# Generated by Django 2.0 on 2019-04-11 07:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('city', models.CharField(blank=True, max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MyDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_date', models.DateField()),
                ('tahajjud', models.CharField(choices=[('Prayed', 'Prayed'), ('Not Prayed', 'Not Prayed')], max_length=20)),
                ('fajar', models.CharField(choices=[('Jamat', 'Jamat'), ('Individual', 'Individual'), ('Kaza', 'Kaza'), ('Not Prayed', 'Not Prayed')], max_length=20)),
                ('zuhar', models.CharField(choices=[('Jamat', 'Jamat'), ('Individual', 'Individual'), ('Kaza', 'Kaza'), ('Not Prayed', 'Not Prayed')], max_length=20)),
                ('asar', models.CharField(choices=[('Jamat', 'Jamat'), ('Individual', 'Individual'), ('Kaza', 'Kaza'), ('Not Prayed', 'Not Prayed')], max_length=20)),
                ('maghrib', models.CharField(choices=[('Jamat', 'Jamat'), ('Individual', 'Individual'), ('Kaza', 'Kaza'), ('Not Prayed', 'Not Prayed')], max_length=20)),
                ('isha', models.CharField(choices=[('Jamat', 'Jamat'), ('Individual', 'Individual'), ('Kaza', 'Kaza'), ('Not Prayed', 'Not Prayed')], max_length=20)),
                ('tilawat', models.BooleanField(default=False)),
                ('zikr', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MyMonth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_date', models.DateField()),
                ('fast', models.BooleanField(default=False)),
                ('donation', models.BooleanField(default=False)),
                ('ijtema', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Month',
                'verbose_name_plural': 'Months',
            },
        ),
        migrations.CreateModel(
            name='MyWeek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('dawat_muslim', models.BooleanField(default=False)),
                ('dawat_non_muslim', models.BooleanField(default=False)),
                ('hifz', models.BooleanField(default=False)),
                ('usra', models.BooleanField(default=False)),
                ('halq_quran', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Week',
                'verbose_name_plural': 'Weeks',
            },
        ),
        migrations.AlterUniqueTogether(
            name='mymonth',
            unique_together={('user', 'month_date')},
        ),
        migrations.AlterUniqueTogether(
            name='myday',
            unique_together={('user', 'day_date')},
        ),
    ]
